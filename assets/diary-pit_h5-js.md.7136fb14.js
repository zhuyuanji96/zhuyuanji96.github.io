import{_ as s,c as a,o as n,a as e}from"./app.734e0133.js";const A=JSON.parse('{"title":"移动端H5页面js相关问题记录&解决","description":"","frontmatter":{},"headers":[{"level":2,"title":"WebView 返回上一页不刷新","slug":"webview-返回上一页不刷新","link":"#webview-返回上一页不刷新","children":[]}],"relativePath":"diary-pit/h5-js.md"}'),p={name:"diary-pit/h5-js.md"},o=e(`<h1 id="移动端h5页面js相关问题记录-解决" tabindex="-1">移动端H5页面js相关问题记录&amp;解决 <a class="header-anchor" href="#移动端h5页面js相关问题记录-解决" aria-hidden="true">#</a></h1><h2 id="webview-返回上一页不刷新" tabindex="-1">WebView 返回上一页不刷新 <a class="header-anchor" href="#webview-返回上一页不刷新" aria-hidden="true">#</a></h2><h4 id="原因" tabindex="-1">原因 <a class="header-anchor" href="#原因" aria-hidden="true">#</a></h4><p>为了提升浏览网页的效率加入了缓存机制</p><h4 id="解决方案" tabindex="-1">解决方案 <a class="header-anchor" href="#解决方案" aria-hidden="true">#</a></h4><p>监听 <code>pageshow</code> 事件，通过 <code>persisted</code> 或者 <code>performance.navigation.type</code> 属性判断当前页面是否通过缓存载入</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> pageshowFn </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">persisted</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span></span>
<span class="line"><span style="color:#F07178;">    (</span><span style="color:#A6ACCD;">window</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">performance</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">window</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">performance</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">navigation</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">type</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  ) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">location</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">reload</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">window</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">pageshow</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> pageshowFn)</span></span>
<span class="line"></span></code></pre></div>`,7),l=[o];function t(c,r,i,y,F,D){return n(),a("div",null,l)}const C=s(p,[["render",t]]);export{A as __pageData,C as default};
