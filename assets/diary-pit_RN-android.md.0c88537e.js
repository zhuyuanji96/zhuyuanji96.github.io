import{_ as s,o as a,c as n,a as l}from"./app.08297905.js";const o="/assets/rn-android-5.1cf0f0d4.png",e="/assets/rn-android-1.80672890.webp",p="/assets/rn-android-2.babceb3e.png",t="/assets/rn-android-3.1d1af4f3.png",c="/assets/rn-android-4.54d128bc.png",m=JSON.parse('{"title":"React Native 小白安卓开发历险记","description":"","frontmatter":{},"headers":[{"level":2,"title":"设置APP名称、logo图标","slug":"设置app名称、logo图标","link":"#设置app名称、logo图标","children":[{"level":3,"title":"修改名称","slug":"修改名称","link":"#修改名称","children":[]},{"level":3,"title":"修改应用图标","slug":"修改应用图标","link":"#修改应用图标","children":[]}]},{"level":2,"title":"启动屏设置之 react-native-splash-screen","slug":"启动屏设置之-react-native-splash-screen","link":"#启动屏设置之-react-native-splash-screen","children":[]},{"level":2,"title":"打包的apk http请求无效","slug":"打包的apk-http请求无效","link":"#打包的apk-http请求无效","children":[{"level":3,"title":"解决方案","slug":"解决方案","link":"#解决方案","children":[]}]},{"level":2,"title":"关于 Ant Design Mobile RN","slug":"关于-ant-design-mobile-rn","link":"#关于-ant-design-mobile-rn","children":[{"level":3,"title":"react-native link @ant-design/icons-react-native 无效","slug":"react-native-link-ant-design-icons-react-native-无效","link":"#react-native-link-ant-design-icons-react-native-无效","children":[]}]},{"level":2,"title":"项目开发注意事项","slug":"项目开发注意事项","link":"#项目开发注意事项","children":[{"level":3,"title":"样式编写相关","slug":"样式编写相关","link":"#样式编写相关","children":[]},{"level":3,"title":"关于页面路由","slug":"关于页面路由","link":"#关于页面路由","children":[]}]}],"relativePath":"diary-pit/RN-android.md"}'),r={name:"diary-pit/RN-android.md"},i=l(`<h1 id="react-native-小白安卓开发历险记" tabindex="-1"><code>React Native</code> 小白安卓开发历险记 <a class="header-anchor" href="#react-native-小白安卓开发历险记" aria-hidden="true">#</a></h1><p>从0开始，使用 <code>React Native</code> 进行 <code>android</code> 程序开发。此文主要记录开发过程中踩过的一些坑和一些开发注意事项。因为并没有适配 <code>IOS</code> 机型，所有这里均不考虑 <code>IOS</code> 系统兼容问题。 有机会刷完 <code>IOS</code> 副本，再做记录。</p><h2 id="设置app名称、logo图标" tabindex="-1">设置APP名称、logo图标 <a class="header-anchor" href="#设置app名称、logo图标" aria-hidden="true">#</a></h2><p>应用程序的名称默认是使用 <code>react-native-cli</code> 创建项目时的名称。修改的方式很简单，找到相应的配置然后修改即可。</p><h3 id="修改名称" tabindex="-1">修改名称 <a class="header-anchor" href="#修改名称" aria-hidden="true">#</a></h3><p>编辑 <code>android/app/src/main/res/values/strings.xml</code> 文件：</p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">resources</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">-    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">string</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">app_name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">test</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">string</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">+    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">string</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">app_name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">测试程序</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">string</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">   </span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">resources</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="修改应用图标" tabindex="-1">修改应用图标 <a class="header-anchor" href="#修改应用图标" aria-hidden="true">#</a></h3><p>我们直接用生成好的内容替换默认的图标即可。图标位置在 <code>android/app/src/main/res</code> 文件夹下，应用图标需要设置不同尺寸，如果所示：</p><p><img src="`+o+`" alt="img"></p><h2 id="启动屏设置之-react-native-splash-screen" tabindex="-1">启动屏设置之 <code>react-native-splash-screen</code> <a class="header-anchor" href="#启动屏设置之-react-native-splash-screen" aria-hidden="true">#</a></h2><p><a href="https://github.com/crazycodeboy/react-native-splash-screen" target="_blank" rel="noreferrer">仓库地址</a></p><p>首先按照文档进行安装使用 (android)</p><ul><li><p>第一步 <code>npm i react-native-splash-screen --save</code> 安装相关 <code>NPM</code> 包</p></li><li><p>第二步 在 <code>android/app/build.gradle</code> 文件中, 将 <code>:react-native-splash-screen</code> 项目添加为编译时依赖项：</p></li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">...</span></span>
<span class="line"><span style="color:#A6ACCD;">dependencies {</span></span>
<span class="line"><span style="color:#A6ACCD;">    ...</span></span>
<span class="line"><span style="color:#A6ACCD;">    implementation project(&#39;:react-native-splash-screen&#39;)</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><ul><li>⚠️ 第三步 注意此处有坑！！！按照官方文档的步骤，会让我们在 <code>MainApplication</code> 中注册该包，然后在后面的步骤都完成之后，程序启动正常。BUT！！！</li></ul><p>到启动屏关闭之后就出现惊悚的血红色背景和苍白的错误文案：</p><p><img src="`+e+`" alt="img"></p><p>简单解释下就是，我们获取插件的方法在 <code>MainApplication</code> 中重写了两次，该 <code>Android</code> 包已经在 <code>PackageList</code> 中了，所以就不需要再自己手动添加注册包了。所以这里就可以省略掉文档中在<code>MainApplication</code> 文件中注册的操作了。（猜测可能是版本更新导致已经自动注册了～）</p><ul><li>第四步 开始配置插件, 通过更改 <code>MainActivity.java</code> 使用 <code>react-native-splash-screen</code></li></ul><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">android</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">os</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Bundle</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// here</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">com</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">facebook</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">react</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">ReactActivity</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// react-native-splash-screen &gt;= 0.3.1</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">devio</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">rn</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">splashscreen</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">SplashScreen</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// here</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// react-native-splash-screen &lt; 0.3.1</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">com</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">cboy</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">rn</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">splashscreen</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">SplashScreen</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// here</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MainActivity</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ReactActivity</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">protected</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">onCreate</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Bundle</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">savedInstanceState</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        SplashScreen</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">show</span><span style="color:#89DDFF;">(this);</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// here</span></span>
<span class="line"><span style="color:#A6ACCD;">        super</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">onCreate</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">savedInstanceState</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// ...other code</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>第五步 插件使用, 创建一个名为 <code>launch_screen.xml</code> 的文件在 <code>app/src/main/res/layout</code>（<code>layout</code>如果不存在则创建 - 文件夹）。文件的内容应如下所示：</li></ul><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;?</span><span style="color:#F07178;">xml</span><span style="color:#C792EA;"> version</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;"> encoding</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">?&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">RelativeLayout</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">xmlns</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">android</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://schemas.android.com/apk/res/android</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">android</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">orientation</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vertical</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">android</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">layout_width</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">match_parent</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">android</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">layout_height</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">match_parent</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">ImageView</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">android</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">layout_width</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">match_parent</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">android</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">layout_height</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">match_parent</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">android</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@drawable/launch_screen</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">android</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">scaleType</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">centerCrop</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">RelativeLayout</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>通过创建一个 <code>launch_screen.png</code> 文件并将其放在适当的 <code>drawable</code> 文件夹中来自定义您的启动屏幕。<code>Android</code> 会自动缩放可绘制对象，因此您不必为所有手机密度提供图像。</p><p>这是文档的原话，但是注意这里不仅仅只是创建一个文件夹，需要根据不同尺寸手机创建对应的文件夹（如下图所示,文件夹内文件类型相同），如果只创建设置了 <code>drawable</code>文件夹及内容，打包出来后少部分手机会直接打不开程序，作者亲身经历此坑！所以文件配置一定要全！！！</p><p><img src="`+p+`" alt="img"></p><p>然后添加一个名为<code>primary_dark</code>的颜色在 <code>app/src/main/res/values/colors.xml</code> 文件中</p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;?</span><span style="color:#F07178;">xml</span><span style="color:#C792EA;"> version</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;"> encoding</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">?&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">resources</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">color</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">primary_dark</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">#000000</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">color</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">resources</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>最后在适合的时机，在代码中把开屏图片隐藏即可</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> SplashScreen </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">react-native-splash-screen</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">WelcomePage</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Component</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">componentDidMount</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    	</span><span style="color:#676E95;font-style:italic;">// do stuff while splash screen is shown</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// After having done stuff (such as async tasks) hide the splash screen</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">SplashScreen</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">hide</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>其他额外配置可以查看<a href="https://github.com/crazycodeboy/react-native-splash-screen" target="_blank" rel="noreferrer">原文档</a>配置</p><h2 id="打包的apk-http请求无效" tabindex="-1">打包的<code>apk</code> <code>http</code>请求无效 <a class="header-anchor" href="#打包的apk-http请求无效" aria-hidden="true">#</a></h2><p>开发调试的时候网络请求都没有问题，但是打包成 <code>apk</code> 安装后，接口请求都无法请求成功。查了资料以后发现，是因为 <code>android</code> 系统默认禁止访问不安全的请求，比如http导致的。</p><h3 id="解决方案" tabindex="-1">解决方案 <a class="header-anchor" href="#解决方案" aria-hidden="true">#</a></h3><h4 id="方法一是直接使用-https-进行数据请求" tabindex="-1">方法一是直接使用 <code>https</code> 进行数据请求 <a class="header-anchor" href="#方法一是直接使用-https-进行数据请求" aria-hidden="true">#</a></h4><h4 id="方法二是进行一些配置-使-app-可以进行-http-进行数据请求" tabindex="-1">方法二是进行一些配置 使 <code>app</code> 可以进行 <code>http</code> 进行数据请求 <a class="header-anchor" href="#方法二是进行一些配置-使-app-可以进行-http-进行数据请求" aria-hidden="true">#</a></h4><p>首先在 <code>res</code> 下新增加一个 <code>xml</code> 目录，然后创建一个名为 <code>network_security_config.xml</code> 文件,如图：</p><p><img src="`+t+`" alt="img"></p><p>文件内容如下</p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;?</span><span style="color:#F07178;">xml</span><span style="color:#C792EA;"> version</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;"> encoding</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">?&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">network-security-config</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">base-config</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">cleartextTrafficPermitted</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">true</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">network-security-config</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>然后在 <code>androidManifiest.xml</code> 文件中添加 <code>android:networkSecurityConfig=&quot;@xml/network_security_config&quot;</code></p><p><img src="`+c+`" alt="img"></p><p>最后重新打包就可以了</p><h2 id="关于-ant-design-mobile-rn" tabindex="-1">关于 <code>Ant Design Mobile RN</code> <a class="header-anchor" href="#关于-ant-design-mobile-rn" aria-hidden="true">#</a></h2><p>关于在 <code>React native</code> 中使用 <code>Ant Design Mobile RN</code> 注意事项。</p><p>首先我的程序使用 <code>react-native-cli</code> 脚手架搭建，安装使用 <code>Ant Design Mobile RN</code> 组件库的时候，因为按需样式引入问题，最终使用的是 <code>babel-plugin-import</code> 方案进行按需加载。</p><p>但是在组件使用的过程中还是有些组件会有问题，最终用的还是 <code>react native</code> 官方封装的组件。所以这里强烈建议能用官方提供的组件尽量使用官方的。</p><h3 id="react-native-link-ant-design-icons-react-native-无效" tabindex="-1"><code>react-native link @ant-design/icons-react-native</code> 无效 <a class="header-anchor" href="#react-native-link-ant-design-icons-react-native-无效" aria-hidden="true">#</a></h3><p>在使用 <code>Ant Design Mobile RN</code> 按照文档配置时 <code>react-native link @ant-design/icons-react-native</code> 无效。字体图标无法关联到对应的文件夹，导致使用图标的时候，字体图标无法加载。</p><p>目前解决方案是手动复制 <code>node_modules/@ant-design/icons-react-native/fonts</code> 到 <code>android/app/src/main/assets/fonts</code> 设置一下 <code>fonts</code> 文件。</p><p><a href="https://github.com/crazycodeboy/react-native-splash-screen" target="_blank" rel="noreferrer">GitHub Issues</a></p><h2 id="项目开发注意事项" tabindex="-1">项目开发注意事项 <a class="header-anchor" href="#项目开发注意事项" aria-hidden="true">#</a></h2><h3 id="样式编写相关" tabindex="-1">样式编写相关 <a class="header-anchor" href="#样式编写相关" aria-hidden="true">#</a></h3><p>RN 在编写的样式的时候，关于元素的长宽虽然RN已经做过处理，我们直接写数字就行，但是我在开发时，在不同机型上还是会有差异，有时甚至有些时候会直接影响布局。所以建议尽量使用 <code>flex</code> 做自适应的布局。</p><p>其次就是 <code>css</code> 样式是不支持的，例如，渐变色和背景图片的设置都需要通过特殊的方法进行设置；</p><ul><li><p>背景图片</p><p>可以通过官方封装的组件 <code>ImageBackground</code>,但是这里我在开发的时候遇到了一个问题，就是在使用背景图的时候要想图片完全展示就需要根据图片设置元素的尺寸。但是上面也说了各种机型对宽高的解析还是会有差异，这就导致一些情况下有些机型样式会有问题。暂时也没找到好的解决方案，只能把背景图当作图片定位到容器里，然后根据容器自适应宽度。</p></li><li><p>渐变色</p><p>通过 <code>react-native-linear-gradient</code> 工具库解决</p></li></ul><p>然后在开发页面的时候当页面内容太长 <code>app</code> 页面并不会因为内容超出一屏还能滚动，结果是其他部分直接看不到，并且不能滚动页面，这里需要注意，跟web开发有很大区别。需要使用滚动视图 <code>ScrollView </code> 解决。</p><h3 id="关于页面路由" tabindex="-1">关于页面路由 <a class="header-anchor" href="#关于页面路由" aria-hidden="true">#</a></h3><p>我使用的是 <code>React Navigation 6</code> 使用上基本没遇到什么问题，但是有一点需要注意。默认情况下，当组件卸载时 <code>React</code> 会自动调用 <code>useEffect</code> 函数中返回的函数。但是在 <code>React Navigation</code>中使用时，由于页面之间的切换并不会导致组件的卸载和挂载，因此 <code>useEffect</code> 函数不会被触发。</p><p>为了解决这个问题，你可以使用 <code>React Navigation</code> 提供的 <code>useIsFocused</code> 钩子函数来判断当前页面是否处于焦点状态。只有当前页面处于焦点状态时，才需要执行 <code>useEffect</code> 函数。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">useIsFocused</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@react-navigation/native</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">MyComponent</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">isFocused</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">useIsFocused</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">useEffect</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 执行一些副作用</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// 清除副作用</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span><span style="color:#F07178;"> [])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">useEffect</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">isFocused</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// 页面失去焦点，清除副作用</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span><span style="color:#F07178;"> [</span><span style="color:#A6ACCD;">isFocused</span><span style="color:#F07178;">])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 其他代码...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,61),y=[i];function D(F,d,C,A,h,u){return a(),n("div",null,y)}const v=s(r,[["render",D]]);export{m as __pageData,v as default};
