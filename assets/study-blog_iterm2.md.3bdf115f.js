import{_ as s,o as a,c as n,a as l}from"./app.45f88402.js";const p="/assets/iterm2-1.d950653e.png",d=JSON.parse('{"title":"使用 iTerm2 Profiles 快捷登录 ssh","description":"","frontmatter":{},"headers":[{"level":2,"title":"检查版本","slug":"检查版本","link":"#检查版本","children":[]},{"level":2,"title":"填写 iTerm2 的配置文件","slug":"填写-iterm2-的配置文件","link":"#填写-iterm2-的配置文件","children":[]},{"level":2,"title":"创建指定的配置文件","slug":"创建指定的配置文件","link":"#创建指定的配置文件","children":[{"level":3,"title":"基础命令解析","slug":"基础命令解析","link":"#基础命令解析","children":[]},{"level":3,"title":"连接方式","slug":"连接方式","link":"#连接方式","children":[]},{"level":3,"title":"其他 expect 脚本示例","slug":"其他-expect-脚本示例","link":"#其他-expect-脚本示例","children":[]}]}],"relativePath":"study-blog/iterm2.md"}'),o={name:"study-blog/iterm2.md"},e=l(`<h1 id="使用-iterm2-profiles-快捷登录-ssh" tabindex="-1">使用 <code>iTerm2 Profiles</code> 快捷登录 <code>ssh</code> <a class="header-anchor" href="#使用-iterm2-profiles-快捷登录-ssh" aria-hidden="true">#</a></h1><p>以前每次链接远程服务器的时候都是通过命令行，然后输入密码进行登录链接，每次链接都要重复这个步骤显得十分的麻烦。所以找到了 <code>iTerm2 Profiles</code> 的功能进行快捷登录。</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 用户名（root或其他已有用户）登录远程服务器</span></span>
<span class="line"><span style="color:#FFCB6B;">ssh</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">root@</span><span style="color:#F78C6C;">118.</span><span style="color:#A6ACCD;">**</span><span style="color:#C3E88D;">.</span><span style="color:#A6ACCD;">**</span><span style="color:#F78C6C;">.18</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#  指定端口（88）</span></span>
<span class="line"><span style="color:#FFCB6B;">ssh</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">88</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">zhuyuanji@</span><span style="color:#F78C6C;">118.</span><span style="color:#A6ACCD;">**</span><span style="color:#C3E88D;">.</span><span style="color:#A6ACCD;">**</span><span style="color:#F78C6C;">.18</span></span>
<span class="line"></span></code></pre></div><h2 id="检查版本" tabindex="-1">检查版本 <a class="header-anchor" href="#检查版本" aria-hidden="true">#</a></h2><p>检查是否安装好(显示安装好的版本号就是已经安装好了)</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">expect</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-v</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># expect version 5.45</span></span>
<span class="line"></span></code></pre></div><h2 id="填写-iterm2-的配置文件" tabindex="-1">填写 <code>iTerm2</code> 的配置文件 <a class="header-anchor" href="#填写-iterm2-的配置文件" aria-hidden="true">#</a></h2><p>首先找到 <code>iTerm2</code>，然后选择 <code>Preferences</code>，点击 <code>+</code> 添加新的 <code>General</code> 配置，配置基础 <code>Name</code>，如有需要可以添加一个新的 <code>Tags</code>，然后在 <code>Commond</code> 中，设置 <code>expect</code> 的执行文件，可以在任意文件夹下的任意一个文件，随便任意指定。</p><p><img src="`+p+`" alt="img"></p><h2 id="创建指定的配置文件" tabindex="-1">创建指定的配置文件 <a class="header-anchor" href="#创建指定的配置文件" aria-hidden="true">#</a></h2><p>首先进入到指定的文件夹中，并创建对应的配置文件(这里是<code>***.sh</code>文件)，并添加文件内容，如下：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">#!/usr/bin/expect</span></span>
<span class="line"><span style="color:#82AAFF;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">HOST</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">118.18.18.188</span></span>
<span class="line"><span style="color:#82AAFF;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">port</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1818</span></span>
<span class="line"><span style="color:#82AAFF;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">USER</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">zhuyuanji</span></span>
<span class="line"><span style="color:#82AAFF;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">PASSWORD</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8</span><span style="color:#A6ACCD;">*******</span><span style="color:#F78C6C;">8</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#FFCB6B;">spawn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ssh</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> $port $USER</span><span style="color:#C3E88D;">@</span><span style="color:#A6ACCD;">$HOST</span></span>
<span class="line"><span style="color:#FFCB6B;">expect</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        &quot;</span><span style="color:#C3E88D;">yes/no</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">send</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">yes\\r</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#FFCB6B;">exp_continue</span><span style="color:#89DDFF;">;}</span></span>
<span class="line"><span style="color:#89DDFF;">         &quot;</span><span style="color:#C3E88D;">*password:*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">send</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">$PASSWORD</span><span style="color:#C3E88D;">\\r</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#FFCB6B;">interact</span></span>
<span class="line"></span></code></pre></div><h3 id="基础命令解析" tabindex="-1">基础命令解析 <a class="header-anchor" href="#基础命令解析" aria-hidden="true">#</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 设置超时时间,默认超时时间10s.</span></span>
<span class="line"><span style="color:#82AAFF;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">timeout</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># spawn后面接的是我们要执行的shell命令</span></span>
<span class="line"><span style="color:#FFCB6B;">spawn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">shell</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">command</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 匹配输出内容“hi”</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 匹配到内容&#39;&#39;hi&quot;后输出“hello”，“\\r”是代表是返回字符。</span></span>
<span class="line"><span style="color:#FFCB6B;">expect</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hi</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">send</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">“hello</span><span style="color:#A6ACCD;">\\r</span><span style="color:#C3E88D;">”}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 执行完成后保持交互状态，把控制权交给控制台，这个时候就可以手工操作了。如果没有这一句登录完成后会退出，而不是留在远程终端上。如果你只是登录过去执行一段命令就退出，可改为［expect eof］          </span></span>
<span class="line"><span style="color:#A6ACCD;">　　</span><span style="color:#FFCB6B;">interact</span><span style="color:#A6ACCD;">     　　　　　</span></span>
<span class="line"></span></code></pre></div><h3 id="连接方式" tabindex="-1">连接方式 <a class="header-anchor" href="#连接方式" aria-hidden="true">#</a></h3><ul><li>直接点击 <code>Profiles</code> 菜单，就能看到新的配置，直接点击就可以自动连接了。</li><li>在终端界面，直接右键，New Tab 选中即可~</li><li>快捷键操作，command+o ，选择你设定的Profile即可。</li><li>或者设在设置 <code>Profiles</code> 的时候设置 <code>Shortcut key</code> 快捷键选项</li></ul><h3 id="其他-expect-脚本示例" tabindex="-1">其他 <code>expect</code> 脚本示例 <a class="header-anchor" href="#其他-expect-脚本示例" aria-hidden="true">#</a></h3><h4 id="简单更改密码脚本" tabindex="-1">简单更改密码脚本 <a class="header-anchor" href="#简单更改密码脚本" aria-hidden="true">#</a></h4><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">root@localhost shell</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"># cat password.exp</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#!/usr/bin/expect -d                  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#&quot;#!/usr/bin/expect&quot;这一行告诉操作系统脚本里的代码使用那一个shell来执行。 -d 启用调试模式(可加可不加)。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#设置超时时间为30s</span></span>
<span class="line"><span style="color:#82AAFF;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">timeout</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">30</span><span style="color:#A6ACCD;">  　　　　　　　　　　　　</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#spawn是进入expect环境后才可以执行的expect内部命令，如果没有装expect或者直接在默认的SHELL下执行是找不到spawn命令的。所以不要用 “which spawn“之类的命令去找spawn命令。好比windows里的dir就是一个内部命令，这个命令由shell自带，你无法找到一个dir.com 或 dir.exe 的可执行文件。它主要的功能是给ssh运行进程加个壳，用来传递交互指令。</span></span>
<span class="line"><span style="color:#FFCB6B;">spawn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">passwd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">user5　　　</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#这个命令的意思是判断上次输出结果里是否包含“New password:”的字符串，如果有则立即返回&quot;123456&quot;,&quot;\\r&quot;代表是返回字符，否则就等待一段时间后返回，这里等待时长就是前面设置的30秒　　　　　　　</span></span>
<span class="line"><span style="color:#FFCB6B;">expect</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">New password:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{send</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">123456\\r</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">}</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#在平常我们设置密码的时候会让我输入一次后再输入一次进行确认，这个是匹配第二次输出，然后再次输入密码。</span></span>
<span class="line"><span style="color:#FFCB6B;">expect</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">new password:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{send</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">123456\\r</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">}</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#表示读取到文件结束符</span></span>
<span class="line"><span style="color:#FFCB6B;">expect</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">eof　　　　　　　　　　　　　</span></span>
<span class="line"></span></code></pre></div><h4 id="登陆远程服务器并停留在远程服务器上" tabindex="-1">登陆远程服务器并停留在远程服务器上 <a class="header-anchor" href="#登陆远程服务器并停留在远程服务器上" aria-hidden="true">#</a></h4><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">root@localhost shell</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"># cat login.exp </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#!/usr/bin/expect</span></span>
<span class="line"><span style="color:#FFCB6B;">spawn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ssh</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">192.168.123.218</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;">#ssh 远程登陆</span></span>
<span class="line"><span style="color:#FFCB6B;">expect</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">*yes/no</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">send</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">yes\\r</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#FFCB6B;">exp_continue</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">#匹配输出内容，返回内容，exp_continue表示继续执行下一步</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">*password</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">send</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">123456\\r</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#FFCB6B;">interact</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">#执行完成后保持交互状态，把控制权交给控制台，这个时候就可以手工操作了。如果没有这一句登录完成后会退出，而不是留在远程终端上。如果你只是登录过去执行一段命令就退出，可改为［expect eof］</span></span>
<span class="line"></span></code></pre></div><h4 id="传输参数执行登陆" tabindex="-1">传输参数执行登陆 <a class="header-anchor" href="#传输参数执行登陆" aria-hidden="true">#</a></h4><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">root@localhost shell</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"># cat  login2.exp </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#!/usr/bin/expect </span></span>
<span class="line"><span style="color:#82AAFF;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ip</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">lindex $argv </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">#这条命令是将变量ip的值设置为传入进来的第一个参数。[lindex $argv 0]表示的就是第一个参数的值</span></span>
<span class="line"><span style="color:#82AAFF;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">port</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">lindex $argv </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">#这条命令是将变量port的值设置为传入进来的第二个参数。[lindex $argv 1]表示的就是第二个参数的值</span></span>
<span class="line"><span style="color:#82AAFF;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">passwd</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">123456</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#FFCB6B;">spawn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ssh</span><span style="color:#A6ACCD;"> $ip </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;">$port</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">#使用变量，这里使用的方法跟shell脚本一样</span></span>
<span class="line"><span style="color:#FFCB6B;">expect</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#C3E88D;">yes/no</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">send</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">yes\\r</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#FFCB6B;">exp_continue</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#C3E88D;">password:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">send</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">$passwd</span><span style="color:#C3E88D;">\\r</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#FFCB6B;">interact</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">root@localhost shell</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"># ./login2.exp  192.168.123.218 </span><span style="color:#F78C6C;">22</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">#多个参数直接以空格间隔，第一个参数：192.168.123.218 第二个参数22</span></span>
<span class="line"></span></code></pre></div>`,23),t=[e];function c(r,y,C,i,D,F){return a(),n("div",null,t)}const h=s(o,[["render",c]]);export{d as __pageData,h as default};
